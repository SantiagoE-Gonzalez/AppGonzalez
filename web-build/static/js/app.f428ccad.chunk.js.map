{"version":3,"sources":["Firebase/config.js","Context/ShopProvider.js","Styles/Colors.js","Screens/ShopScreen/Categorias.js","Screens/ShopScreen/Detalle.js","Screens/ShopScreen/Productos.js","Styles/fonts.js","Navigators/Stacks/Shop.js","Screens/OrderScreen/OrdenesRealizadas.js","Screens/OrderScreen/DetalleDeCompra.js","Navigators/Stacks/Order.js","Screens/CartScreens/Carrito.js","Screens/CartScreens/FinalizarCompra.js","Navigators/Stacks/Cart.js","Screens/Login.js","Navigators/index.js","App.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","Shop","createContext","ShopProvider","children","useState","cantidadItems","setCantidadItems","cart","setCart","totalAPagar","setTotalAPagar","ordenesRealizadas","setOrdenesRealizadas","uid","setUid","compraRealizadaOK","setCompraRealizadaOK","useEffect","onAuthStateChanged","user","a","async","queryCollectionOrdenes","query","collection","where","getDocs","querySnapshotOrdenes","ordenes","forEach","doc","orden","id","data","push","isInCart","producto","find","elemento","Provider","value","addItem","item","cantidadToAdd","productoEnCarrito","cantidad","cartFiltrado","filter","itemCarrito","price","removeItem","carritoFiltrado","clear","cerrarSesion","signOut","then","catch","error","Colors","Categorias","navigation","categorias","setCategorias","queryConsultaCategorias","querySnapshot","items","console","log","SafeAreaView","FlatList","renderItem","View","TouchableOpacity","style","styles","onPress","categoria","title","navigate","category","Text","keyExtractor","toString","StyleSheet","create","container","flex","marginTop","StatusBar","currentHeight","backgroundColor","padding","marginVertical","marginHorizontal","borderRadius","fontSize","wrapperCustom","Detalle","route","params","useContext","cantidadElegida","setCantidadElegida","view","Image","resizeMethod","stretch","source","uri","image","description","titleInputForm","stock","TextInput","onChangeText","textInput","placeholder","keyboardType","boton","parseInt","Alert","alert","text","textoBoton","paddingTop","width","height","fontStyle","margin","textAlign","fontWeight","color","borderColor","borderWidth","Productos","productos","setProductos","queryConsultaProductos","irADetalle","ShopNavigator","Stack","createNativeStackNavigator","Navigator","initialRouteName","screenOptions","headerStyle","headerTintColor","Screen","name","component","options","headerShown","headerRight","Button","OrdenesRealizadas","Item","createdAt","buyer","nombre","apellido","irADetalleDeCompra","length","DetalleDeCompra","toFixed","email","direccion","OrdersNavigator","Carrito","eliminarProducto","botonEliminarCompra","textoBotonEliminarCompra","ScrollView","botonFinalizarCompra","textoBotonFinalizarCompra","FinalizarCompra","setNombre","setApellido","setEmail","telefono","setTelefono","setDireccion","setLoadingCheckout","limpiarFormulario","orderGenerada","total","Date","toLocaleString","batch","writeBatch","outOfStock","prod","getDoc","documentSnapshot","update","addDoc","commit","err","message","mensaje","setCheckoutText","CartNavigator","Login","tengoUsuario","setTengoUsuario","password","setPassword","mensajeDeError","setMensajeDeError","loginAction","signInWithEmailAndPassword","userCredential","errorMessage","singupAction","createUserWithEmailAndPassword","headerTitle","viewImagen","secureTextEntry","viewBotones","textoBotones","viewAlert","viewAlertText","alignContent","resizeMode","alignItems","TabNavigator","setUser","Tab","createBottomTabNavigator","NavigationContainer","tabBarIcon","size","MaterialCommunityIcons","tabBarBadge","App"],"mappings":"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","file":"static/js/app.f428ccad.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { getFirestore } from \"@firebase/firestore\";\r\nimport { getAuth } from \"@firebase/auth\"\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB02eeqbZCW8JiKLLHo-EWvTY5SwyR16ug\",\r\n    authDomain: \"interbanking-react-sg.firebaseapp.com\",\r\n    projectId: \"interbanking-react-sg\",\r\n    storageBucket: \"interbanking-react-sg.appspot.com\",\r\n    messagingSenderId: \"1046185155767\",\r\n    appId: \"1:1046185155767:web:9fce4d3926e84eadfd4132\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth(app) //exporto la autenticacion\r\nexport const db = getFirestore(app) //exporto la base de datos.","import { createContext, useState, useEffect } from 'react'\r\nimport { db } from \"../Firebase/config\";\r\nimport { collection,where, getDocs, query } from \"firebase/firestore\";\r\nimport { getAuth, onAuthStateChanged, signOut } from \"firebase/auth\";\r\n\r\n//Se crea el contexto.\r\nexport const Shop = createContext()\r\n\r\n//Declaramos el ShopProvider con pascal case, es lo que vamos a exportar\r\nconst ShopProvider = ({ children }) => {\r\n\r\n    const [cantidadItems, setCantidadItems] = useState(0)\r\n    const [cart, setCart] = useState([])\r\n    const [totalAPagar, setTotalAPagar] = useState(0)\r\n    const [ordenesRealizadas, setOrdenesRealizadas] = useState([])\r\n    const [uid, setUid] = useState(\"\")\r\n    const [compraRealizadaOK, setCompraRealizadaOK] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const auth = getAuth();\r\n        onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n                setUid(user.uid);\r\n            } \r\n        });\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        (async () => {\r\n            const queryCollectionOrdenes = query(collection(db, \"orders\"), where(\"uid\", \"==\", uid))\r\n            \r\n            const querySnapshotOrdenes = await getDocs(queryCollectionOrdenes);\r\n            \r\n            const ordenes = []\r\n            querySnapshotOrdenes.forEach((doc) => {\r\n                const orden = { id: doc.id, ...doc.data() }\r\n                ordenes.push(orden)\r\n            })\r\n\r\n            setOrdenesRealizadas([...ordenes])\r\n            setCompraRealizadaOK(false)\r\n        })()\r\n\r\n    }, [uid, compraRealizadaOK])\r\n\r\n    const cerrarSesion = () => {\r\n        const auth = getAuth();\r\n        signOut(auth).then(() => {\r\n          // Sign-out successful.\r\n        }).catch((error) => {\r\n          // An error happened.\r\n        });\r\n    }\r\n\r\n    //Uso de funciones del context\r\n    const addItem = (item, cantidadToAdd) => {\r\n        const productoEnCarrito = isInCart(item)\r\n        if (productoEnCarrito) {\r\n            setCantidadItems(cantidadItems + cantidadToAdd)\r\n            productoEnCarrito.cantidad += cantidadToAdd\r\n            const cartFiltrado = cart.filter(itemCarrito => itemCarrito.id !== productoEnCarrito.id)\r\n            cartFiltrado.push(productoEnCarrito)\r\n            setCart(cartFiltrado)\r\n        } else {\r\n            setCantidadItems(cantidadItems + cantidadToAdd)\r\n            setCart([...cart, { ...item, cantidad: cantidadToAdd }]) //{...item, cantidad} de esta forma añado la propiedad cantidad al objeto item\r\n        }\r\n        setTotalAPagar(totalAPagar + (cantidadToAdd * item.price))\r\n\r\n    }\r\n    const isInCart = (producto) => {\r\n        return cart.find(elemento => elemento.id === producto.id)\r\n    }\r\n\r\n    const clear = () => {\r\n        setTotalAPagar(0)\r\n        setCart([])\r\n        setCantidadItems(0)\r\n    }\r\n\r\n    const removeItem = (item) => {\r\n        setCantidadItems(cantidadItems - item.cantidad)\r\n        const carritoFiltrado = cart.filter(itemCarrito => itemCarrito.id !== item.id)\r\n        setCart(carritoFiltrado)\r\n        setTotalAPagar(totalAPagar - (item.price * item.cantidad))\r\n    }\r\n\r\n    return (\r\n        <Shop.Provider value={{ cantidadItems, addItem, cart, totalAPagar,\r\n         removeItem, clear, ordenesRealizadas,uid,setCompraRealizadaOK,cerrarSesion}}>\r\n            {children}\r\n        </Shop.Provider>\r\n    )\r\n}\r\n\r\nexport default ShopProvider //exportamos el shopProvider. ShopProvider provee el contexto\r\n","export const Colors = {\r\n    primaryColor: '#ffb703',\r\n    primaryTextHintColor: '#fff',\r\n    colorBlanco: '#fff',\r\n    colorSombra: '#000',\r\n    backgroundCardColor: '#fff',\r\n    textoBotonNormal: '#fff',\r\n    colorDanger: '#d90429'\r\n};","import { View, TouchableOpacity, FlatList, StyleSheet, Text, StatusBar,SafeAreaView } from 'react-native';\r\nimport React from 'react'\r\nimport { useEffect, useState } from 'react';\r\nimport { collection, getDocs, query } from \"firebase/firestore\";\r\nimport { db } from '../../Firebase/config';\r\nimport { Colors } from '../../Styles/Colors';\r\nconst Categorias = ({ navigation }) => {\r\n    const [categorias, setCategorias] = useState([]);\r\n\r\n    const irACategoria = (categoria) => {\r\n        navigation.navigate('Productos', {\r\n            category: categoria\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                try {\r\n                    let queryConsultaCategorias = query(collection(db, \"categorias\"));\r\n                    collection(db, \"categorias\")\r\n                    const querySnapshot = await getDocs(queryConsultaCategorias);\r\n                    const items = [];\r\n                    querySnapshot.forEach((doc) => {\r\n                        console.log(doc.id, \" => \", doc.data());\r\n                        items.push({ id: doc.id, ...doc.data() });\r\n                    });\r\n                    setCategorias(items);\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })()\r\n    }, []);\r\n    return (\r\n        <SafeAreaView>\r\n            <FlatList\r\n                data={categorias}\r\n                renderItem={({ item }) => {\r\n                    return <View><TouchableOpacity style={styles.item}\r\n                        onPress={() => irACategoria(item.title)}\r\n                    >\r\n                        <Text>\r\n                            {item.title}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    </View>\r\n                }\r\n                }\r\n                keyExtractor={item => item.id.toString()}\r\n            />\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default Categorias\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        marginTop: StatusBar.currentHeight || 0,\r\n    },\r\n    item: {\r\n        backgroundColor: Colors.backgroundCardColor,\r\n        padding: 20,\r\n        marginVertical: 8,\r\n        marginHorizontal: 16,\r\n        borderRadius: 10\r\n    },\r\n    title: {\r\n        fontSize: 32,\r\n    },\r\n    wrapperCustom: {\r\n        borderRadius: 8,\r\n        padding: 6\r\n    }\r\n});","import { Image, View, Text, StyleSheet, TextInput, TouchableOpacity, Alert } from 'react-native'\r\nimport React, { useContext, useState } from 'react'\r\nimport { Shop } from '../../Context/ShopProvider';\r\nimport { Colors } from '../../Styles/Colors';\r\n\r\n\r\nconst Detalle = ({ navigation, route }) => {\r\n\r\n    const { item } = route.params;\r\n    const { addItem } = useContext(Shop);\r\n    const [cantidadElegida, setCantidadElegida] = useState(\"1\")\r\n    const agregarAlCarrito = () => {\r\n        if(parseInt(cantidadElegida)===0 || parseInt(cantidadElegida) > item.stock || \r\n            cantidadElegida < 1){\r\n            Alert.alert(\r\n                \"La cantidad es erronea\",\r\n                \"Verificá que la cantidad este entre los valores correctos.\",\r\n                [\r\n                    { text: \"Aceptar\", onPress: () => console.log(\"OK Pressed\") }\r\n                ]\r\n            );\r\n        }else{\r\n            addItem(item, parseInt(cantidadElegida));\r\n            Alert.alert(\r\n                \"Se agregó con éxito\",\r\n                \"Se agregó con éxito tu producto al carrito.\",\r\n                [\r\n                    { text: \"Aceptar\", onPress: () => console.log(\"OK Pressed\") }\r\n                ]\r\n            );\r\n            navigation.navigate('Categorias')\r\n        }\r\n    }\r\n    return (\r\n        <View>\r\n            <Text style={styles.title}>{item.title}</Text>\r\n            <View\r\n                style={styles.view}>\r\n                <Image\r\n                    resizeMethod='resize'\r\n                    style={styles.stretch}\r\n                    source={{\r\n                        uri: item.image,\r\n                    }}\r\n                />\r\n            </View>\r\n            <View\r\n                style={styles.view}>\r\n                <Text>{item.description}</Text>\r\n            </View>\r\n\r\n            <View style={styles.view}>\r\n                <Text style={styles.titleInputForm}>Ingresa cantidad (mínimo 1 - máximo {item.stock})</Text>\r\n                <TextInput\r\n                    value={cantidadElegida}\r\n                    onChangeText={setCantidadElegida}\r\n                    style={styles.textInput}\r\n                    placeholder=\"Ingresar la cantidad\"\r\n                    keyboardType=\"number-pad\"\r\n                />\r\n            </View>\r\n            <TouchableOpacity\r\n                style={styles.boton}\r\n                onPress={agregarAlCarrito}\r\n            ><Text style={styles.textoBoton}>AGREGAR AL CARRITO</Text></TouchableOpacity>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Detalle\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        paddingTop: 50,\r\n    },\r\n    stretch: {\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n    view: {\r\n        backgroundColor: Colors.backgroundCardColor,\r\n        padding: 20,\r\n        marginVertical: 10,\r\n        marginHorizontal: 10,\r\n        borderRadius: 10\r\n    },\r\n    title: {\r\n        fontSize: 15,\r\n        fontStyle: 'italic',\r\n        padding: 20,\r\n        marginVertical: 8,\r\n        marginHorizontal: 16,\r\n    },\r\n    boton: {\r\n        backgroundColor: Colors.primaryColor,\r\n        margin: 10,\r\n        padding: 10,\r\n        borderRadius: 10\r\n    },\r\n    textoBoton: {\r\n        textAlign: 'center',\r\n        fontWeight: '500',\r\n        color: Colors.primaryTextHintColor\r\n    },textInput: {\r\n        borderColor: Colors.primaryColor,\r\n        color: '#000',\r\n        borderWidth: 1,\r\n        padding: 10,\r\n        borderRadius: 10\r\n    },\r\n});","import { View, Text, FlatList, TouchableOpacity, StyleSheet,SafeAreaView } from 'react-native'\r\nimport { useEffect, useState } from 'react';\r\nimport { FontsSizes } from '../../Styles/fonts';\r\nimport { Colors } from '../../Styles/Colors';\r\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\r\nimport { db } from '../../Firebase/config';\r\n\r\nconst Productos = ({ navigation, route }) => {\r\n    const { category } = route.params;\r\n    const [productos, setProductos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n          try {\r\n            try {\r\n              let queryConsultaProductos = query(collection(db, \"productos\"));\r\n              if(category){\r\n                queryConsultaProductos = query(collection(db, \"productos\"), where(\"category\", \"==\", category));\r\n              }\r\n              collection(db, \"productos\")\r\n              const querySnapshot = await getDocs(queryConsultaProductos);\r\n              const items = [];\r\n              querySnapshot.forEach((doc) => {\r\n                items.push({id: doc.id, ...doc.data()});\r\n              });\r\n              setProductos(items);\r\n            } catch (error) {\r\n              console.log(error);\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        })()\r\n      }, [category]) \r\n\r\n    const irADetalle = (item) => {\r\n        navigation.navigate('Detalle', {\r\n            id: item.id,\r\n            title: item.title,\r\n            item: item,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <FlatList\r\n                data={productos}\r\n                renderItem={({ item }) => {\r\n                    return <View><TouchableOpacity style={styles.item}\r\n                        onPress={() => irADetalle(item)}\r\n                    >\r\n                        <Text>\r\n                            {item.title}\r\n                        </Text>\r\n                        <Text>\r\n                            ${item.price}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    </View>\r\n                }\r\n                }\r\n                keyExtractor={item => item.id.toString()}\r\n            />\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default Productos\r\n\r\nconst styles = StyleSheet.create({\r\n    item: {\r\n        backgroundColor: Colors.colorBlanco,\r\n        padding: 20,\r\n        marginVertical: 8,\r\n        marginHorizontal: 16,\r\n        borderRadius: 10\r\n    },\r\n    title: {\r\n        fontSize: FontsSizes.titleSize,\r\n    },\r\n    wrapperCustom: {\r\n        borderRadius: 8,\r\n        padding: 6\r\n    }\r\n});","export const FontsSizes = {\r\n    normal: 12,\r\n    large: 14,\r\n    extraLarge: 16,\r\n    titleSize: 32\r\n}","import React, {useContext} from 'react'\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\"\r\nimport Categorias from \"../../Screens/ShopScreen/Categorias\";\r\nimport Detalle from \"../../Screens/ShopScreen/Detalle\";\r\nimport Productos from \"../../Screens/ShopScreen/Productos\";\r\nimport { Colors } from '../../Styles/Colors';\r\nimport { Button } from 'react-native';\r\nimport { Shop } from '../../Context/ShopProvider';\r\nconst ShopNavigator = () => {\r\n    const Stack = createNativeStackNavigator(); {/**Es la ruta inicial */ }\r\n    const {cerrarSesion} = useContext(Shop)\r\n    return (\r\n        <Stack.Navigator\r\n            initialRouteName=\"Categorias\"\r\n            screenOptions={{\r\n                headerStyle: { backgroundColor: Colors.primaryColor },\r\n                headerTintColor: Colors.primaryTextHintColor\r\n            }}\r\n        >\r\n            <Stack.Screen name=\"Categorias\" component={Categorias}\r\n                options={{ title: \"Categorias\", headerShown: true,\r\n                headerRight: () => (\r\n                    <Button\r\n                      onPress={cerrarSesion}\r\n                      title=\"Cerrar Sesión\"\r\n                      color={Colors.primaryColor}\r\n                    />\r\n                  ), }} />{/** aunque se llame component, lo ubicamos en la carpeta de Screen. */}\r\n            <Stack.Screen\r\n                name=\"Productos\"\r\n                component={Productos}\r\n                options={({ route }) => ({ title: route.params.category })}></Stack.Screen>\r\n            <Stack.Screen\r\n                name=\"Detalle\"\r\n                component={Detalle}\r\n                options={({ route }) => ({ title: route.params.title })}></Stack.Screen>\r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\nexport default ShopNavigator","import { StyleSheet, Text, View, SafeAreaView, FlatList , TouchableOpacity,} from 'react-native'\r\nimport React, {useContext} from 'react'\r\nimport { Shop } from '../../Context/ShopProvider'\r\nimport { Colors } from '../../Styles/Colors'\r\n\r\nconst OrdenesRealizadas = ({navigation}) => {\r\n    //const [ordenesRealizadas, setOrdenesRealizadas] = useState([])\r\n    const {ordenesRealizadas} = useContext (Shop)\r\n    const irADetalleDeCompra = (item) => {\r\n        navigation.navigate('DetalleDeCompra', {\r\n            item: item\r\n        })\r\n    }\r\n\r\n    const renderItem = ({ item }) => (\r\n        <Item item={item} />\r\n    );\r\n    const Item = ({ item }) => (\r\n        <View style={styles.item}>\r\n            <Text>Compra nro: {item.id}</Text>\r\n            <Text>Fecha de compra: {item.createdAt}</Text>\r\n            <Text>Comprador: {item.buyer.nombre} {item.buyer.apellido}</Text>\r\n            <TouchableOpacity style={styles.boton}\r\n            onPress={() => irADetalleDeCompra(item)}>\r\n                <Text style={styles.textoBoton}>VER MÁS DETALLES</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n\r\n\r\n   \r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            {ordenesRealizadas.length === 0 ? \r\n            <Text style={styles.title}>Aún no hay ordenes. Si realizás una compra la visualizarás acá.</Text>:\r\n            <FlatList\r\n                data={ordenesRealizadas}\r\n                renderItem={renderItem}\r\n                keyExtractor={item => item.id}\r\n            />}\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default OrdenesRealizadas\r\n\r\nconst styles = StyleSheet.create({\r\n    item: {\r\n        backgroundColor: Colors.backgroundCardColor,\r\n        padding: 20,\r\n        marginVertical: 8,\r\n        marginHorizontal: 16,\r\n        borderRadius: 10,\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold'\r\n    },\r\n    description: {\r\n        fontSize: 10,\r\n        textAlign: 'left',\r\n        fontWeight: '100'\r\n    },\r\n    boton: {\r\n        backgroundColor: Colors.primaryColor,\r\n        margin: 10,\r\n        padding: 10,\r\n        borderRadius: 10\r\n    },\r\n    textoBoton: {\r\n        textAlign: 'center',\r\n        fontWeight: '500',\r\n        color: Colors.primaryTextHintColor\r\n    }\r\n\r\n})","import { StyleSheet, Text, View, SafeAreaView, TouchableOpacity, FlatList } from 'react-native'\r\nimport React from 'react'\r\nimport { Colors } from '../../Styles/Colors';\r\n\r\nconst DetalleDeCompra = ({ route }) => {\r\n\r\n  const { item } = route.params;\r\n\r\n  const Item = ({ item }) => (\r\n    <View style={styles.item}>\r\n      <Text style={styles.title}>{item.title}</Text>\r\n\r\n      <View>\r\n        <Text>\r\n          Cantidad: {item.cantidad}\r\n        </Text>\r\n        <Text>\r\n          Precio unitario: ${item.price.toFixed(2)}\r\n        </Text>\r\n        <Text>\r\n          Precio total: ${(item.price * item.cantidad).toFixed(2)}\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const renderItem = ({ item }) => (\r\n    <Item item={item} />\r\n  );\r\n  return (\r\n    <SafeAreaView>\r\n      <Text style={styles.title}>Datos del comprador</Text>\r\n      <View style={styles.item}>\r\n        <Text>Fecha: {item.createdAt}</Text>\r\n        <Text>Nombre: {item.buyer.nombre}</Text>\r\n        <Text>Apellido: {item.buyer.apellido}</Text>\r\n        <Text>EMail: {item.buyer.email}</Text>\r\n        <Text>Dirección: {item.buyer.direccion}</Text>\r\n      </View>\r\n      <Text style={styles.title}>Productos comprados</Text>\r\n      <FlatList\r\n        data={item.items}\r\n        renderItem={renderItem}\r\n        keyExtractor={item => item.id}\r\n      />\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default DetalleDeCompra\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    backgroundColor: Colors.backgroundCardColor,\r\n    padding: 20,\r\n    marginVertical: 8,\r\n    marginHorizontal: 16,\r\n    borderRadius: 10,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    textAlign: 'center',\r\n    fontWeight: 'bold'\r\n  },\r\n  description: {\r\n    fontSize: 10,\r\n    textAlign: 'left',\r\n    fontWeight: '100'\r\n  }\r\n})","import React from 'react'\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\"\r\nimport { Colors } from '../../Styles/Colors';\r\nimport OrdenesRealizadas from '../../Screens/OrderScreen/OrdenesRealizadas';\r\nimport DetalleDeCompra from '../../Screens/OrderScreen/DetalleDeCompra';\r\nconst OrdersNavigator = () => {\r\n  const Stack = createNativeStackNavigator(); {/**Es la ruta inicial */ }\r\n\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"Carrito\"\r\n      screenOptions={{\r\n        headerStyle: { backgroundColor: Colors.primaryColor },\r\n        headerTintColor: Colors.primaryTextHintColor\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"OrdenesRealizadas\" component={OrdenesRealizadas} options={{ title: \"Ordenes realizadas\", headerShown: true }} />{/** aunque se llame component, lo ubicamos en la carpeta de Screen. */}\r\n      <Stack.Screen name=\"DetalleDeCompra\" component={DetalleDeCompra} options={{ title: \"Detalle de compra\", headerShown: true }} />{/** aunque se llame component, lo ubicamos en la carpeta de Screen. */}\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\nexport default OrdersNavigator","import { StyleSheet, Text, View, FlatList, TouchableOpacity, SafeAreaView, ScrollView } from 'react-native'\r\nimport React, { useContext } from 'react'\r\nimport { Shop } from '../../Context/ShopProvider'\r\nimport { Colors } from '../../Styles/Colors';\r\n\r\nconst Carrito = ({ navigation }) => {\r\n    const { cart, totalAPagar, cantidadItems, removeItem, clear } = useContext(Shop);\r\n\r\n    const eliminarProducto = (item) => {\r\n        removeItem(item)\r\n    }\r\n\r\n    const finalizarCompra = () => {\r\n        navigation.navigate('FinalizarCompra')\r\n    }\r\n\r\n    const Item = ({ item }) => (\r\n        <View style={styles.item}>\r\n            <Text style={styles.title}>{item.title}</Text>\r\n\r\n            <View>\r\n                <Text>\r\n                    Cantidad: {item.cantidad}\r\n                </Text>\r\n                <Text>\r\n                    Precio unitario: ${item.price.toFixed(2)}\r\n                </Text>\r\n                <Text>\r\n                    Precio total: ${(item.price * item.cantidad).toFixed(2)}\r\n                </Text>\r\n                <TouchableOpacity\r\n                    onPress={() => eliminarProducto(item)}\r\n                    style={styles.botonEliminarCompra}>\r\n                    <Text style={styles.textoBotonEliminarCompra}>ELIMINAR PRODUCTO</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n\r\n    const renderItem = ({ item }) => (\r\n        <Item item={item} />\r\n    );\r\n    return (\r\n        <SafeAreaView>\r\n            <ScrollView>\r\n                {cantidadItems > 0 ?\r\n                    <View style={styles.item}>\r\n                        <Text style={styles.title}>Resumen de compra</Text>\r\n                        <Text>Total a pagar: ${totalAPagar.toFixed(2)}</Text>\r\n                        <Text>Cantidad de artículos: {cantidadItems}</Text>\r\n                    </View> :\r\n                    <Text style={styles.title}> Todavía no agregaste ningún producto</Text>\r\n                }\r\n\r\n                <FlatList\r\n                    data={cart}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id}\r\n                />\r\n                {cantidadItems > 0 ?\r\n                    <View>\r\n                        <TouchableOpacity\r\n                            onPress={clear}\r\n                            style={styles.botonEliminarCompra}>\r\n                            <Text style={styles.textoBotonEliminarCompra}>LIMPIAR CARRITO</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity\r\n                            onPress={finalizarCompra}\r\n                            style={styles.botonFinalizarCompra}>\r\n                            <Text style={styles.textoBotonFinalizarCompra}>FINALIZAR COMPRA</Text>\r\n                        </TouchableOpacity>\r\n                    </View> : <Text></Text>\r\n                }\r\n            </ScrollView>\r\n\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default Carrito\r\n\r\nconst styles = StyleSheet.create({\r\n    item: {\r\n        backgroundColor: Colors.backgroundCardColor,\r\n        padding: 20,\r\n        marginVertical: 8,\r\n        marginHorizontal: 16,\r\n        borderRadius: 10\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold'\r\n    },\r\n    description: {\r\n        fontSize: 10,\r\n        textAlign: 'left',\r\n        fontWeight: '100'\r\n    },\r\n    botonFinalizarCompra: {\r\n        backgroundColor: Colors.primaryColor,\r\n        margin: 10,\r\n        padding: 10,\r\n        borderRadius: 10\r\n    }, botonEliminarCompra: {\r\n        backgroundColor: Colors.colorDanger,\r\n        margin: 10,\r\n        padding: 10,\r\n        borderRadius: 10\r\n    },\r\n    textoBotonFinalizarCompra: {\r\n        textAlign: 'center',\r\n        fontWeight: '500',\r\n        color: Colors.primaryTextHintColor\r\n    },\r\n    textoBotonEliminarCompra: {\r\n        textAlign: 'center',\r\n        fontWeight: '500',\r\n        color: Colors.primaryTextHintColor\r\n    }\r\n\r\n})","import { StyleSheet, Text, View, TextInput, TouchableOpacity, SafeAreaView, Alert} from 'react-native'\r\nimport React, { useContext, useState } from 'react'\r\nimport { Shop } from '../../Context/ShopProvider'\r\nimport { Colors } from '../../Styles/Colors';\r\nimport { db } from '../../Firebase/config'\r\nimport { addDoc, collection, writeBatch, getDoc, doc } from 'firebase/firestore'\r\n\r\nconst FinalizarCompra = ({ navigation }) => {\r\n    const { uid, clear, setCompraRealizadaOK } = useContext(Shop)\r\n\r\n    const { totalAPagar, cantidadItems, cart } = useContext(Shop);\r\n    const [nombre, setNombre] = useState(\"\");\r\n    const [apellido, setApellido] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [telefono, setTelefono] = useState(\"\");\r\n    const [direccion, setDireccion] = useState(\"\");\r\n    const [loadingCheckout, setLoadingCheckout] = useState(false)\r\n\r\n    const finalizarCompra = () => {\r\n        if (nombre === \"\" || apellido === \"\"\r\n            || email === \"\" || telefono === \"\") {\r\n            Alert.alert(\r\n                \"Faltan completar campos\",\r\n                \"Debés completar los campos nombre, apellido, email y teléfono\",\r\n                [\r\n                    { text: \"Aceptar\", onPress: () => console.log(\"OK Pressed\") }\r\n                ]\r\n            );\r\n            return\r\n        }\r\n        const orderGenerada = {\r\n            buyer: {\r\n                nombre: nombre,\r\n                apellido: apellido,\r\n                email: email,\r\n                telefono: telefono,\r\n                direccion: direccion\r\n            },\r\n            items: cart\r\n            ,\r\n            total: totalAPagar,\r\n            createdAt: new Date().toLocaleString(),\r\n            uid: uid\r\n        }\r\n\r\n        //Primer paso: abrir un batch\r\n        const batch = writeBatch(db)//ver en qué level colocarlo\r\n        const outOfStock = []\r\n\r\n        //Chequear el stock del producto en nuestra db y restarlo a la cantidad, si corresponde\r\n        cart.forEach((prod) => {\r\n            setLoadingCheckout(true)\r\n            getDoc(doc(db, 'productos', prod.id))\r\n                .then((documentSnapshot) => {\r\n                    if (documentSnapshot.data().stock >= prod.cantidad) {\r\n                        batch.update(doc(db, 'productos', documentSnapshot.id), {\r\n                            stock: documentSnapshot.data().stock - prod.cantidad\r\n                        })\r\n                    } else {\r\n                        outOfStock.push({ id: documentSnapshot.id, ...documentSnapshot.data() })\r\n                    }\r\n                    console.log(outOfStock);\r\n\r\n                    if (outOfStock.length === 0) {\r\n                        addDoc(collection(db, 'orders'), orderGenerada).then(({ id }) => {\r\n                            batch.commit().then(() => {\r\n                                clear();\r\n                                limpiarFormulario();\r\n                                setCompraRealizadaOK(true);\r\n                                Alert.alert(\r\n                                    \"Orden generada con éxito\",\r\n                                    `La orden se realizó con éxito con el id+ ${id}`,\r\n                                    [\r\n                                        {\r\n                                            text: \"Aceptar\", onPress: () => navigation.navigate('Carrito')\r\n                                        }\r\n                                    ]\r\n                                );\r\n                            })\r\n                        }).catch((err) => {\r\n                            Alert.alert(\r\n                                \"No se pudo realizar la compra\",\r\n                                `Error: ${err.message}`,\r\n                                [\r\n                                    { text: \"Aceptar\" }\r\n                                ]\r\n                            );\r\n                            console.log(`Error: ${err.message}`);\r\n                        })\r\n                    } else {\r\n                        let mensaje = ''\r\n                        for (const producto of outOfStock) {\r\n                            mensaje += `${producto.title} `\r\n                        }\r\n                        Alert.alert(\r\n                            \"Productos fuera de stock\",\r\n                            `Productos fuera de stock: ${mensaje}`,\r\n                            [\r\n                                { text: \"Aceptar\" }\r\n                            ]\r\n                        );\r\n                        setCheckoutText(`Productos fuera de stock: ${mensaje}`)\r\n                    }\r\n\r\n                    setLoadingCheckout(false)\r\n                })\r\n        })\r\n    }\r\n\r\n\r\n    const limpiarFormulario = () => {\r\n        setApellido(\"\");\r\n        setDireccion(\"\");\r\n        setEmail(\"\");\r\n        setNombre(\"\");\r\n        setTelefono(\"\");\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            <View style={styles.item}>\r\n                <Text style={styles.title}>Resumen de compra</Text>\r\n                <Text>Total a pagar: ${totalAPagar.toFixed(2)}</Text>\r\n                <Text>Cantidad de artículos: {cantidadItems}</Text>\r\n            </View>\r\n            <Text style={styles.title}>Completá el formulario</Text>\r\n            <View style={styles.item}>\r\n                <Text style={styles.titleInputForm}>Nombre</Text>\r\n                <TextInput\r\n                    value={nombre}\r\n                    onChangeText={setNombre}\r\n                    style={styles.textInput}\r\n                    placeholder=\"Nombre\"\r\n                    keyboardType=\"default\"\r\n                />\r\n                <Text style={styles.titleInputForm}>Apellido</Text>\r\n                <TextInput\r\n                    value={apellido}\r\n                    onChangeText={setApellido}\r\n                    style={styles.textInput}\r\n                    placeholder=\"Apellido\"\r\n                    keyboardType=\"default\"\r\n                />\r\n                <Text style={styles.titleInputForm}>Correo Electrónico</Text>\r\n                <TextInput\r\n                    value={email}\r\n                    onChangeText={setEmail}\r\n                    style={styles.textInput}\r\n                    placeholder=\"correo@electronic.com\"\r\n                    keyboardType=\"email-address\"\r\n                />\r\n                <Text style={styles.titleInputForm}>Teléfono</Text>\r\n                <TextInput\r\n                    value={telefono}\r\n                    onChangeText={setTelefono}\r\n                    style={styles.textInput}\r\n                    placeholder=\"1144444444\"\r\n                    keyboardType=\"phone-pad\"\r\n                />\r\n                <Text style={styles.titleInputForm}>Dirección</Text>\r\n                <TextInput\r\n                    value={direccion}\r\n                    onChangeText={setDireccion}\r\n                    style={styles.textInput}\r\n                    placeholder=\"Dirección\"\r\n                    keyboardType=\"default\"\r\n                />\r\n            </View>\r\n            <TouchableOpacity\r\n                onPress={finalizarCompra}\r\n                style={styles.botonFinalizarCompra}>\r\n                <Text style={styles.textoBotonFinalizarCompra}>Finalizar compra</Text>\r\n            </TouchableOpacity>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default FinalizarCompra\r\n\r\nconst styles = StyleSheet.create({\r\n    item: {\r\n        backgroundColor: Colors.backgroundCardColor,\r\n        padding: 20,\r\n        marginVertical: 8,\r\n        marginHorizontal: 16,\r\n        borderRadius: 10\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold'\r\n    },\r\n    description: {\r\n        fontSize: 10,\r\n        textAlign: 'left',\r\n        fontWeight: '100'\r\n    },\r\n    botonFinalizarCompra: {\r\n        backgroundColor: Colors.primaryColor,\r\n        margin: 10,\r\n        padding: 10,\r\n        borderRadius: 10\r\n    },\r\n    textoBotonFinalizarCompra: {\r\n        textAlign: 'center',\r\n        fontWeight: '500',\r\n        color: Colors.primaryTextHintColor\r\n    },\r\n    textInput: {\r\n        borderColor: Colors.primaryColor,\r\n        color: '#000',\r\n        borderWidth: 1,\r\n        padding: 10,\r\n        borderRadius: 10\r\n    },\r\n    titleInputForm: {\r\n        color: Colors.primaryColor,\r\n        fontWeight: 'bold'\r\n    }\r\n\r\n})","import React from 'react'\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\"\r\nimport Carrito from '../../Screens/CartScreens/Carrito';\r\nimport { Colors } from '../../Styles/Colors';\r\nimport FinalizarCompra from '../../Screens/CartScreens/FinalizarCompra';\r\n\r\nconst CartNavigator = () => {\r\n  const Stack = createNativeStackNavigator(); {/**Es la ruta inicial */ }\r\n\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"Carrito\"\r\n      screenOptions={{\r\n        headerStyle: { backgroundColor: Colors.primaryColor },\r\n        headerTintColor: Colors.primaryTextHintColor\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"Carrito\" component={Carrito} options={{ title: \"Carrito\", headerShown: true }} />{/** aunque se llame component, lo ubicamos en la carpeta de Screen. */}\r\n      <Stack.Screen name=\"FinalizarCompra\" component={FinalizarCompra} options={{ title: \"Finalizar compra\", headerShown: true }} />{/** aunque se llame component, lo ubicamos en la carpeta de Screen. */}\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\nexport default CartNavigator","import { StyleSheet, Text, View, TextInput, TouchableOpacity, Image } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from '../Firebase/config';\r\nimport { Colors } from '../Styles/Colors';\r\n\r\nconst Login = () => {\r\n    const [tengoUsuario, setTengoUsuario] = useState(true);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [mensajeDeError, setMensajeDeError] = useState(\"\");\r\n\r\n    const changeExisteUsuarioStatus = () => {\r\n        setTengoUsuario(!tengoUsuario);\r\n    }\r\n\r\n    /**\r\n     * Se llama a este metodo cuando se presiona el boton de iniciarSesion/Registrarse.\r\n     * Ya que es un solo botón que cambia de texto.\r\n     * Dependiendo el estado de existeUsuario\r\n     */\r\n    const loginSingupAction = () => {\r\n        if (tengoUsuario) {\r\n            loginAction()\r\n        } else {\r\n            singupAction()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tiene la logica del login con firebase.\r\n     */\r\n    const loginAction = () => {\r\n        if (email !== \"\" && password != \"\") {\r\n            signInWithEmailAndPassword(auth, email, password)\r\n                .then((userCredential) => {\r\n                    // Signed in \r\n                    const user = userCredential.user;\r\n                    console.log(user);\r\n                    // ...\r\n                })\r\n                .catch((error) => {\r\n                    const errorMessage = error.message;\r\n                    setMensajeDeError(errorMessage);\r\n                    setEmail(\"\");\r\n                    setPassword(\"\");\r\n                })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Accion de registrarse con firebase.\r\n     */\r\n    const singupAction = () => {\r\n        if (email !== \"\" && password != \"\") {\r\n            createUserWithEmailAndPassword(auth, email, password)\r\n                .then((userCredential) => {\r\n                    // Signed in \r\n                    console.log(userCredential)\r\n                    const user = userCredential.user;\r\n                    // ...\r\n                })\r\n                .catch((error) => {\r\n                    const errorMessage = error.message;\r\n                    setMensajeDeError(errorMessage);\r\n                    setEmail(\"\");\r\n                    setPassword(\"\");\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.headerTitle}>\r\n                {tengoUsuario ? 'Iniciar sesión' : 'Registrarse'}\r\n            </Text>\r\n            <View style={styles.viewImagen}>\r\n\r\n            </View>\r\n            <View style={styles.item}>\r\n                <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder='Ingresar email'\r\n                    value={email}\r\n                    onChangeText={setEmail}\r\n                ></TextInput>\r\n                <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder='Ingresar contraseña'\r\n                    secureTextEntry={true}\r\n                    value={password}\r\n                    onChangeText={setPassword}\r\n                ></TextInput>\r\n                <View style={styles.viewBotones}>\r\n                    <TouchableOpacity style={styles.boton}\r\n                        onPress={loginSingupAction}\r\n                    >\r\n                        <Text style={styles.textoBotones}>\r\n                            {tengoUsuario ? 'Iniciar sesión' : 'Registrarme'}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.boton}\r\n                        onPress={changeExisteUsuarioStatus}>\r\n                        <Text style={styles.textoBotones}>\r\n                            {tengoUsuario ? 'No tengo usuario' : 'Ya tengo usuario'}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n            {mensajeDeError ?\r\n                <View style={styles.viewAlert}>\r\n                    <Text\r\n                        style={styles.viewAlertText}\r\n                    >{mensajeDeError}</Text>\r\n                </View> : <View></View>\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 10,\r\n        backgroundColor: '#e7e7e7',\r\n        flex: 1,\r\n        alignContent: 'center'\r\n    }, textInput: {\r\n        borderColor: Colors.primaryColor,\r\n        backgroundColor: Colors.backgroundCardColor,\r\n        color: '#000',\r\n        borderWidth: 1,\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        margin:10\r\n    },\r\n    boton: {\r\n        backgroundColor: Colors.primaryColor,\r\n        margin: 10,\r\n        padding: 10,\r\n        borderRadius: 10,\r\n\r\n    },\r\n    textoBotones: {\r\n        fontWeight: 'bold',\r\n        fontSize: 15,\r\n        textAlign: 'center',\r\n        color: Colors.primaryTextHintColor\r\n    },\r\n    headerTitle: {\r\n        fontSize: 25,\r\n        margin: 20,\r\n        textAlign: 'center'\r\n    }, stretch: {\r\n        width: 200,\r\n        height: 200,\r\n        resizeMode: 'stretch',\r\n    },\r\n    viewImagen: {\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    },\r\n    viewAlert: {\r\n        backgroundColor: '#7f0000',\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        margin:10,\r\n        alignItems: 'center'\r\n    },\r\n    viewAlertText: {\r\n        color: '#fff',\r\n        fontSize: 15\r\n    }, item: {\r\n        backgroundColor: Colors.backgroundCardColor,\r\n        padding: 20,\r\n        margin: 10,\r\n        borderRadius: 10\r\n    },\r\n})","import React, { useState, useEffect, useContext } from 'react'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport ShopNavigator from '../Navigators/Stacks/Shop';\r\nimport OrdersNavigator from '../Navigators/Stacks/Order';\r\nimport CartNavigator from '../Navigators/Stacks/Cart';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Login from '../Screens/Login';\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { auth } from '../Firebase/config';\r\nimport { MaterialCommunityIcons } from 'react-native-vector-icons';\r\nimport { Shop } from '../Context/ShopProvider';\r\n\r\nconst TabNavigator = () => {\r\n    const [user, setUser] = useState(null);\r\n    const Tab = createBottomTabNavigator();\r\n\r\n    const {cantidadItems} = useContext(Shop)\r\n    \r\n    //Verificar usuario con useEffects.\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n                setUser(user)\r\n            } else {\r\n                setUser(null)\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <NavigationContainer>\r\n            {user ?\r\n                <Tab.Navigator>\r\n                    <Tab.Screen\r\n                        name=\"Home\"\r\n                        component={ShopNavigator}\r\n                        options={{\r\n                            headerShown: false,\r\n                            tabBarIcon: ({ color, size }) => (\r\n                                <MaterialCommunityIcons name=\"home\" color={color} size={size} />\r\n                            )\r\n                        }} />\r\n                    <Tab.Screen\r\n                        name=\"Ordenes\"\r\n                        component={OrdersNavigator}\r\n                        options={{\r\n                            headerShown: false,\r\n                            tabBarIcon: ({ color, size }) => (\r\n                                <MaterialCommunityIcons name=\"format-list-numbered\" color={color} size={size} />\r\n                            )\r\n                        }} />\r\n                    <Tab.Screen name=\"Checkout\" component={CartNavigator}\r\n                        options={{\r\n                            headerShown: false,\r\n                            tabBarBadge: cantidadItems ,\r\n                            tabBarIcon: ({ color, size }) => (\r\n                                <MaterialCommunityIcons name=\"cart\" color={color} size={size} />\r\n                            )\r\n                        }} />\r\n                </Tab.Navigator>\r\n                : <Login></Login>}\r\n        </NavigationContainer>\r\n    )\r\n}\r\n\r\nexport default TabNavigator","import ShopProvider from './Context/ShopProvider';\r\nimport TabNavigator from './Navigators';\r\n\r\nexport default function App() {\r\n  return (\r\n    <ShopProvider>\r\n      <TabNavigator></TabNavigator>\r\n    </ShopProvider>\r\n      \r\n  );\r\n}"],"sourceRoot":""}